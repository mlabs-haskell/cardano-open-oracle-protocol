syntax = "proto3";

import "google/protobuf/empty.proto";

package orcfax;

service Oracle {
  // Get a list of all resource types supported by this oracle
  rpc getCatalog(google.protobuf.Empty) returns (GetCatalogResponse) {}

  // Get signatories that will include their signature in the fact producing transactions
  rpc getSignatories(google.protobuf.Empty) returns (GetSignatoriesResponse) {}

  // Create a transaction with the desired information
  rpc createResourceTransaction(CreateResourceTransactionRequest) returns (CreateResourceTransactionResponse) {}
}


message GetCatalogResponse {
  repeated ResourceDescription catalog = 1;
}

message ResourceDescription {
  // Uniform resource name
  string urn = 1;
  // Resource type
  oneof type {
    // Used by MVP version
    RealNumber price = 2;
    // When Cardano DApp schema lands (aka typez)
    Typez typez = 3;
  }
}

message RealNumber {
}

message Typez {
  string typez = 1;
}

message GetSignatoriesResponse {
  repeated PubKeyHash signatories = 1;
}

message PubKeyHash {
  // Base16 (hex) encoded public key hash
  string value = 1;
}

message CreateResourceTransactionRequest {
  // Which resource to observe
  string resource_urn = 1;
  // The PubKeyHash of the user that will submit the transaction
  PubKeyHash submitter = 2;
  // User provided trx output to use as collateral
  UTXORef collateral = 3;
}

message CreateResourceTransactionResponse {}

message UTXORef {}
