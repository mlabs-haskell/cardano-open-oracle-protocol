syntax = "proto3";

import "cardano.proto";

package coop.fact_statement_store;

service FactStatementStore {
  // Fetch a PlutusData encoded Fact Statement with a given ID
  rpc getFactStatement(GetFactStatementRequest) returns (GetFactStatementResponse) {}
}

message GetFactStatementRequest {
  repeated bytes fs_ids = 1;
}

message Success {
  message FsIdAndPlutus {
    bytes fs_id = 1;
    cardano.PlutusData plutus_data = 2;
  }
  repeated FsIdAndPlutus fs_ids_with_plutus = 1;
}

// Error associated with above response messages
// TODO: Should catch and properly report classes of errors users would expect to trigger.
// For example:
//   - Fact statement ID not found
message Error {
  message OtherError {
    // Some other error message
    string msg = 1;
  }
  oneof someError {
    // Some other error
    OtherError other_err = 1;
  }
}

message GetFactStatementResponse {
  oneof factStatementsOrErr {
    // Error encountered when servicing the request
    Error error = 1;
    // Fetched Fact Statements in PlutusData form
    Success success = 2;
  }
}
